version: '3.3'
services:
  postgres:
    image: postgres:15.3
    container_name: postgres
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: "Europe/Moscow"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 10

  telegram-bot:
    build: .
    container_name: telegram-bot
    depends_on:
      - postgres  # Формат массива вместо словаря
    env_file: .env
    environment:
      PYTHONUNBUFFERED: 1
      # Telegram
      ADMIN_ID: ${ADMIN_ID}
      API_ID: ${API_ID}
      API_HASH: ${API_HASH}
      PHONE_NUMBER: ${PHONE_NUMBER}
      LOGIN: ${LOGIN}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      TIME_START: ${TIME_START}
      TIME_END: ${TIME_END}
      SPREADSHEET_ID: ${SPREADSHEET_ID}
      GID: ${GID}
      LOG_LEVEL: INFO
    networks:
      - internal_network  # Для доступа к Postgres
      - default           # Для доступа в интернет
    volumes:
      - ./tg-client-bot-gpt:/app  # Монтируем папку проекта
      - pip-cache:/pip-cache
      - ~/.cache/pip:/root/.cache/pip
      - ./sessions:/app/sessions
      - ./data_user:/app/data
  openvpn:
    image: kylemanna/openvpn:latest
    container_name: openvpn
    cap_add:
      - NET_ADMIN
    networks:
      - internal_network
      - default
    ports:
      - "443:443/tcp"  # Изменили порт и протокол
    volumes:
      - ./openvpn-data:/etc/openvpn
    env_file: .env
    environment:
      OVPN_PROTOCOL: tcp  # Переключаемся на TCP
      OVPN_SERVER_URL: tcp://${OVPN_DOMAIN_OR_IP}:443
      OVPN_CN: ${OVPN_DOMAIN_OR_IP}
      OVPN_NAT: "true"
    command: >
      bash -c '
      if [ ! -f /etc/openvpn/init-complete ]; then
        ovpn_genconfig -u $$OVPN_SERVER_URL -N -d -p "redirect-gateway def1" && 
        echo "yes" | ovpn_initpki nopass && 
        touch /etc/openvpn/init-complete
      fi && 
      ovpn_run
      '
    depends_on:
      - postgres

volumes:
  postgres_data:
  pip-cache:

networks:
  internal_network:
    internal: true  # Сеть только для внутреннего взаимодействия (без доступа в интернет)
  default:          # Стандартная сеть Docker (имеет доступ в интернет)
    external: false  # Создается автоматически, если не указано иное